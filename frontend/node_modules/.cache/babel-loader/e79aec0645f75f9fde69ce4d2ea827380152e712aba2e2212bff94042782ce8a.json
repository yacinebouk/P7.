{"ast":null,"code":"var _jsxFileName = \"/home/yacboukhari/Projects/P7./frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, React } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport NavBar from \"../components/NavBar\";\nimport BackToTopButton from \"../components/utils/BackToTopButton\";\nimport FilActu from \"../components/dashboard/FilActu\";\nimport { useDispatch } from \"react-redux\";\nimport { getUser } from \"../actions/user.actions\";\nimport { getUsers } from \"../actions/users.actions\";\nimport { getPosts } from \"../actions/post.actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // Utilisation du hook d'effet en enlevant la classe non voulue au body au profit d'une nouvelle classe.\n  useEffect(() => {\n    document.body.classList.remove(\"signup\", \"login\", \"profile\");\n    document.body.classList.add(\"dashboard\");\n  }, []);\n\n  // utilisation du hook useDispatch pour répartir les actions\n  const dispatch = useDispatch();\n  dispatch(getUsers());\n  dispatch(getPosts());\n\n  // vérification de la connection utilisateur\n  const [isAuth, setIsAuth] = useState(true);\n  const [userId, setUserId] = useState(null);\n  useEffect(() => {\n    const isLogged = async () => {\n      await axios({\n        method: \"get\",\n        url: `${process.env.REACT_APP_API_URL}/jwtid`,\n        withCredentials: true\n      }).then(res => {\n        if (res.status === 200) {\n          setUserId(res.data);\n          setIsAuth(isAuth);\n        }\n      }).catch(err => {\n        console.log(\"Pas de token ! \" + err);\n        setIsAuth(!isAuth);\n      });\n    };\n    isLogged();\n    if (userId) dispatch(getUser(userId));\n  }, [isAuth, userId, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isAuth ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FilActu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BackToTopButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"PVfdAWsh5UGJaNkABMYUQ2L8u4Y=\", false, function () {\n  return [useDispatch];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useState","React","Navigate","axios","NavBar","BackToTopButton","FilActu","useDispatch","getUser","getUsers","getPosts","Dashboard","document","body","classList","remove","add","dispatch","isAuth","setIsAuth","userId","setUserId","isLogged","method","url","process","env","REACT_APP_API_URL","withCredentials","then","res","status","data","catch","err","console","log"],"sources":["/home/yacboukhari/Projects/P7./frontend/src/pages/Dashboard.js"],"sourcesContent":["import { useEffect, useState, React } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport NavBar from \"../components/NavBar\";\nimport BackToTopButton from \"../components/utils/BackToTopButton\";\nimport FilActu from \"../components/dashboard/FilActu\";\nimport { useDispatch } from \"react-redux\";\nimport { getUser } from \"../actions/user.actions\";\nimport { getUsers } from \"../actions/users.actions\";\nimport { getPosts } from \"../actions/post.actions\";\n\nconst Dashboard = () => {\n  // Utilisation du hook d'effet en enlevant la classe non voulue au body au profit d'une nouvelle classe.\n  useEffect(() => {\n    document.body.classList.remove(\"signup\", \"login\", \"profile\");\n    document.body.classList.add(\"dashboard\");\n  }, []);\n\n  // utilisation du hook useDispatch pour répartir les actions\n  const dispatch = useDispatch();\n  dispatch(getUsers());\n  dispatch(getPosts());\n  \n  // vérification de la connection utilisateur\n  const [isAuth, setIsAuth] = useState(true);\n  const [userId, setUserId] = useState(null);\n  useEffect(() => {\n    const isLogged = async () => {\n      await axios({\n        method: \"get\",\n        url: `${process.env.REACT_APP_API_URL}/jwtid`,\n        withCredentials: true,\n      })\n        .then((res) => {\n          if (res.status === 200) {\n            setUserId(res.data);\n            setIsAuth(isAuth);\n          }\n        })\n        .catch((err) => {\n          console.log(\"Pas de token ! \" + err);\n          setIsAuth(!isAuth);\n        });\n    };\n    isLogged();\n    if (userId) dispatch(getUser(userId));\n  }, [isAuth, userId, dispatch]);\n\n  return (\n    <div>\n      {/* si l'utilisateur a un token il aura accès au dashboard, si non il sera redirigé vers la page de connexion */}\n      {isAuth ? (\n        <div>\n          <NavBar />\n          <FilActu />\n          <BackToTopButton />\n        </div>\n      ) : (\n        <Navigate to=\"/\" />\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,eAAe,MAAM,qCAAqC;AACjE,OAAOC,OAAO,MAAM,iCAAiC;AACrD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,QAAQ,QAAQ,yBAAyB;AAAC;AAEnD,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB;EACAZ,SAAS,CAAC,MAAM;IACda,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC;IAC5DH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,GAAG,CAAC,WAAW,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAC9BU,QAAQ,CAACR,QAAQ,EAAE,CAAC;EACpBQ,QAAQ,CAACP,QAAQ,EAAE,CAAC;;EAEpB;EACA,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC1CD,SAAS,CAAC,MAAM;IACd,MAAMuB,QAAQ,GAAG,YAAY;MAC3B,MAAMnB,KAAK,CAAC;QACVoB,MAAM,EAAE,KAAK;QACbC,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,QAAO;QAC7CC,eAAe,EAAE;MACnB,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAK;QACb,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;UACtBV,SAAS,CAACS,GAAG,CAACE,IAAI,CAAC;UACnBb,SAAS,CAACD,MAAM,CAAC;QACnB;MACF,CAAC,CAAC,CACDe,KAAK,CAAEC,GAAG,IAAK;QACdC,OAAO,CAACC,GAAG,CAAC,iBAAiB,GAAGF,GAAG,CAAC;QACpCf,SAAS,CAAC,CAACD,MAAM,CAAC;MACpB,CAAC,CAAC;IACN,CAAC;IACDI,QAAQ,EAAE;IACV,IAAIF,MAAM,EAAEH,QAAQ,CAACT,OAAO,CAACY,MAAM,CAAC,CAAC;EACvC,CAAC,EAAE,CAACF,MAAM,EAAEE,MAAM,EAAEH,QAAQ,CAAC,CAAC;EAE9B,oBACE;IAAA,UAEGC,MAAM,gBACL;MAAA,wBACE,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAG,eACX,QAAC,eAAe;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACf,gBAEN,QAAC,QAAQ;MAAC,EAAE,EAAC;IAAG;MAAA;MAAA;MAAA;IAAA;EACjB;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GAnDIP,SAAS;EAAA,QAQIJ,WAAW;AAAA;AAAA,KARxBI,SAAS;AAqDf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}