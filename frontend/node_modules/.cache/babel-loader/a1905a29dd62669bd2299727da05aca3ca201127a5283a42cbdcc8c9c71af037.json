{"ast":null,"code":"import { GET_USER, UPLOAD_PICTURE } from \"../actions/user.actions\";\n// Etat de base des reducers (vide)\nconst initialState = {};\nexport default function userReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    //dans le cas de GET_USER on incrémente l'initialState des données de payload et ces données seront accessibles par tous les components\n    case GET_USER:\n      return action.payload;\n    case UPLOAD_PICTURE:\n      return {\n        // on récupère les données de l'utilisateur en utilisant l'opérateur spread sans l'écraser\n        ...state,\n        // et on change l'image de profil\n        picture: action.payload\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["GET_USER","UPLOAD_PICTURE","initialState","userReducer","state","action","type","payload","picture"],"sources":["/home/yacboukhari/Projects/P7./frontend/src/reducers/user.reducer.js"],"sourcesContent":["import { GET_USER, UPLOAD_PICTURE } from \"../actions/user.actions\";\n// Etat de base des reducers (vide)\nconst initialState = {};\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    //dans le cas de GET_USER on incrémente l'initialState des données de payload et ces données seront accessibles par tous les components\n    case GET_USER:\n      return action.payload;\n\n    case UPLOAD_PICTURE:\n      return {\n        // on récupère les données de l'utilisateur en utilisant l'opérateur spread sans l'écraser\n        ...state,\n        // et on change l'image de profil\n        picture: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,cAAc,QAAQ,yBAAyB;AAClE;AACA,MAAMC,YAAY,GAAG,CAAC,CAAC;AAEvB,eAAe,SAASC,WAAW,GAA+B;EAAA,IAA9BC,KAAK,uEAAGF,YAAY;EAAA,IAAEG,MAAM;EAC9D,QAAQA,MAAM,CAACC,IAAI;IACjB;IACA,KAAKN,QAAQ;MACX,OAAOK,MAAM,CAACE,OAAO;IAEvB,KAAKN,cAAc;MACjB,OAAO;QACL;QACA,GAAGG,KAAK;QACR;QACAI,OAAO,EAAEH,MAAM,CAACE;MAClB,CAAC;IAEH;MACE,OAAOH,KAAK;EAAC;AAEnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}