{"ast":null,"code":"var _jsxFileName = \"/home/yacboukhari/Projects/P7./frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, React } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { Context } from \"./components/Context\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { getUser } from \"./actions/user.actions\";\n\n// import des pages\nimport Home from \"./pages/Home\";\nimport Signup from \"./pages/Signup\";\nimport Profile from \"./pages/Profile\";\nimport Dashboard from \"./pages/Dashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userId, setUserId] = useState(null);\n  // utilisation du hook useDispatch pour répartir les actions\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const getToken = async () => {\n      await axios({\n        method: \"get\",\n        url: `${process.env.REACT_APP_API_URL}/jwtid`,\n        withCredentials: true\n      }).then(res => {\n        setUserId(res.data);\n      }).catch(err => console.log(\"Pas de token !\"));\n    };\n    getToken();\n    // si l'userId existe il y aura un dispatch de la fonction getUser et est mis à jour à chaque fois que la valeur de userId évolue\n    if (userId) dispatch(getUser(userId));\n  }, [userId, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: userId,\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/inscription\",\n          element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/profil\",\n          element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xPuJ6OdhEvVKfQeqTfMqGs+vbUk=\", false, function () {\n  return [useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","React","BrowserRouter","Routes","Route","Context","axios","useDispatch","getUser","Home","Signup","Profile","Dashboard","App","userId","setUserId","dispatch","getToken","method","url","process","env","REACT_APP_API_URL","withCredentials","then","res","data","catch","err","console","log"],"sources":["/home/yacboukhari/Projects/P7./frontend/src/App.js"],"sourcesContent":["import { useEffect, useState, React } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { Context } from \"./components/Context\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { getUser } from \"./actions/user.actions\";\n\n// import des pages\nimport Home from \"./pages/Home\";\nimport Signup from \"./pages/Signup\";\nimport Profile from \"./pages/Profile\";\nimport Dashboard from \"./pages/Dashboard\";\n\nfunction App() {\n  const [userId, setUserId] = useState(null);\n  // utilisation du hook useDispatch pour répartir les actions\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const getToken = async () => {\n      await axios({\n        method: \"get\",\n        url: `${process.env.REACT_APP_API_URL}/jwtid`,\n        withCredentials: true,\n      })\n        .then((res) => {\n          setUserId(res.data);\n        })\n        .catch((err) => console.log(\"Pas de token !\"));\n    };\n    getToken();\n    // si l'userId existe il y aura un dispatch de la fonction getUser et est mis à jour à chaque fois que la valeur de userId évolue\n    if (userId) dispatch(getUser(userId));\n  }, [userId, dispatch]);\n\n  return (\n    <Context.Provider value={userId}>\n      {/* BrowserRouter englobe toute l'application */}\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/inscription\" element={<Signup />} />\n          <Route path=\"/dashboard\" element={<Dashboard />} />\n          <Route path=\"/profil\" element={<Profile />} />\n          {/* Si l'url rentré ne correspond à rien de déclaré, l'utilisateur est renvoyé a la page d'accueil */}\n          <Route path=\"*\" element={<Home />} />\n        </Routes>\n      </BrowserRouter>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,KAAK,QAAQ,OAAO;AAClD,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC/D,SAASC,OAAO,QAAQ,sBAAsB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,OAAO,QAAQ,wBAAwB;;AAEhD;AACA,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,SAAS,MAAM,mBAAmB;AAAC;AAE1C,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC1C;EACA,MAAMgB,QAAQ,GAAGT,WAAW,EAAE;EAE9BR,SAAS,CAAC,MAAM;IACd,MAAMkB,QAAQ,GAAG,YAAY;MAC3B,MAAMX,KAAK,CAAC;QACVY,MAAM,EAAE,KAAK;QACbC,GAAG,EAAG,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,QAAO;QAC7CC,eAAe,EAAE;MACnB,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAK;QACbV,SAAS,CAACU,GAAG,CAACC,IAAI,CAAC;MACrB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAClD,CAAC;IACDb,QAAQ,EAAE;IACV;IACA,IAAIH,MAAM,EAAEE,QAAQ,CAACR,OAAO,CAACM,MAAM,CAAC,CAAC;EACvC,CAAC,EAAE,CAACA,MAAM,EAAEE,QAAQ,CAAC,CAAC;EAEtB,oBACE,QAAC,OAAO,CAAC,QAAQ;IAAC,KAAK,EAAEF,MAAO;IAAA,uBAE9B,QAAC,aAAa;MAAA,uBACZ,QAAC,MAAM;QAAA,wBACL,QAAC,KAAK;UAAC,IAAI,EAAC,GAAG;UAAC,OAAO,eAAE,QAAC,IAAI;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eACrC,QAAC,KAAK;UAAC,IAAI,EAAC,cAAc;UAAC,OAAO,eAAE,QAAC,MAAM;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eAClD,QAAC,KAAK;UAAC,IAAI,EAAC,YAAY;UAAC,OAAO,eAAE,QAAC,SAAS;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eACnD,QAAC,KAAK;UAAC,IAAI,EAAC,SAAS;UAAC,OAAO,eAAE,QAAC,OAAO;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eAE9C,QAAC,KAAK;UAAC,IAAI,EAAC,GAAG;UAAC,OAAO,eAAE,QAAC,IAAI;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IAC9B;MAAA;MAAA;MAAA;IAAA;EACK;IAAA;IAAA;IAAA;EAAA,QACC;AAEvB;AAAC,GArCQD,GAAG;EAAA,QAGON,WAAW;AAAA;AAAA,KAHrBM,GAAG;AAuCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}